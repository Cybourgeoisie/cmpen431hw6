# Required, Unchangeable
-max:inst                2500000
-fastfwd                  500000
-fetch:mplat                   3
-mem:lat                   90 10
-tlb:lat                      30
-cache:il2                   dl2

# Cache Simulation
# L1
-cache:il1        il1:1024:8:1:r  # <il1:X:Y:Z:A>
                                  # X*Y*Z = 8K,16K,32K,64K
                                  # DEP: Y = fetch:ifqsize * 8
                                  # IND: Z = 1,2,4; associativity
                                  # IND: A = r,l,f
-cache:dl1        dl1:1024:8:1:r  # <dl1:X:Y:Z:A>
                                  # X*Y*Z = 8K,16K,32K,64K
                                  # DEP: Y = fetch:ifqsize * 8
                                  # IND: Z = 1,2,4; associativity
                                  # IND: A = r,l,f
-cache:il1lat                  1  # DEP: on total size of cache:il1
-cache:dl1lat                  1  # DEP: Same as cache:il1lat

# L2
-cache:dl2       ul2:2048:16:2:r  # <ul2:X:Y:Z:A> 
                                  # X*Y*Z = 64K,128K,256K,512K,1024K
                                  # IND/DEP: Y >= size(cache:dl1)+size(cache:il1) && Y <= 128
                                  # IND: Z = 1,2,4,8,16; associativity
                                  # IND: A = r,l,f
-cache:dl2lat                  5  # DEP: on total size of cache:dl2
-cache:il2lat                  5  # DEP: Same as cache:dl2lat

# Memory Access
-mem:width                     8  # IND: 8, 16 (in Bytes)

# TLB
-tlb:itlb       itlb:16:4096:4:r  # IND: <itlb:X:4096:Z:A>
                                  # X*Z <= 256
                                  # IND: X = 2^
                                  # IND: Z = 2^
                                  # IND: A = r,l,f
-tlb:dtlb       dtlb:32:4096:4:r  # IND: <dtlb:X:4096:Z:A>
                                  # X*Z <= 512
                                  # IND: X = 2^
                                  # IND: Z = 2^
                                  # IND: A = r,l,f (l - very costly as assoc increases, particularly >16 , r - 10% more misses than l for 2-way; Chapter 5C.26/27)

# Branch Prediction
-bpred                  nottaken  # IND: nottaken, taken, bimod, 2lev, comb
-bpred:bimod                2048  # IND: bimodal predictor config (<table size>)
-bpred:2lev           1 1024 8 0  # IND: 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb                 1024  # IND: combining predictor config (<meta_table_size>)
-bpred:ras                     0  # IND: [0,16]
-bpred:btb                 512 4  # IND: BTB config (<num_sets> <associativity>)
                                  # IND: num_sets=2^x && num_sets <=1024 
                                  # IND: associativity = 1,2,4

# Processor Core
-fetch:ifqsize                 1  # IND: 1,2,4,8(,16?) * waiting on response from prof. irwin
-fetch:speed                   1  # IND: [1,4]
-decode:width                  1  # IND/DEP: decode:width <= fetch:ifqsize, decode:width = 1,2,4,8(,16?)
-issue:width                   1  # IND/DEP: issue:width depends on issue:inorder
                                  # issue:inorder == true  -> issue:width = 1,2,3,4
                                  # issue:inorder == false -> issue:width = 2,4,8
-issue:inorder              true  # IND: true, false
-issue:wrongpath           false  # IND: true, false; OR...
                                  # POTENTIALLY DEP: issue:wrongpath = !issue:inorder * waiting on prof. irwin

# Out of Order
-ruu:size                      4  # IND/DEP: ruu:size = 2^ && ruu:size <= 8 * issue:width
-lsq:size                      2  # IND/DEP: lsq:size = 2^ && lsq:size <= 4 * issue:width

# Hardware Resources
-res:ialu                      1  # IND/DEP: imult + ialu <= 2 * issue:width
-res:imult                     1  # IND/DEP: imult + ialu <= 2 * issue:width
-res:memport                   2  # IND: 1,2
-res:fpalu                     1  # IND/DEP: fpalu + fpmult <= 2 * issue:width
-res:fpmult                    1  # IND/DEP: fpalu + fpmult <= 2 * issue:width

# Unlikely to Use
# -commit:width                  4  # instruction commit B/W (insts/cycle)
# -bpred:spec_update      <null>  # speculative predictors update in {ID|WB} (default non-spec)